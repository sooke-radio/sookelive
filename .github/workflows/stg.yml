name: Deploy STG


on:
  push:
    branches:
      - stg

jobs:
  stg-deploy:

    runs-on: ubuntu-latest

    # todo: consolidate deploy workflows
    environment: ${{ github.ref == 'refs/heads/main' && 'prd' || 'stg' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key

      - name: Set env
        run: | # copy secrets to env
          cp .env.stg .env
          echo "DATABASE_URI=mongodb://${{ vars.DEPLOY_IP }}:${{ vars.DB_PORT }}/${{ vars.DB_NAME }}" >> .env
          echo "PAYLOAD_SECRET=${{ secrets.STG_PAYLOAD_SECRET }}" >> .env
          echo "CRON_SECRET=${{ secrets.STG_CRON_SECRET }}" >> .env
          echo "AZURACAST_KEY=${{ secrets.AZURACAST_KEY }}" >> .env

      - name: Deploy
        run: rsync -avz -e "ssh -i ../private.key" ./ autobot@${{ vars.DEPLOY_IP }}:${{ vars.DEPLOY_PATH }} --exclude=.git

      - name: Build & Run
        run: | # build & run docker container on server
          ssh -i ../private.key autobot@${{ vars.DEPLOY_IP }} 'cd ${{ vars.DEPLOY_PATH }} && docker compose -f docker-compose-stg.yml up -d --build'